{"version":3,"sources":["components/svg/MenuIcon.js","components/svg/MobileMenuIcon.js","containers/navs/Topnav.EasyAccess.js","containers/navs/Topnav.DarkSwitch.js","containers/navs/Footer.js","containers/navs/Topnav.js","constants/menu.js","containers/navs/Sidebar.js","layout/AppLayout.js","views/app/index.js","components/common/CustomBootstrap.js","helpers/IntlMessages.js"],"names":["MenuIcon","className","xmlns","viewBox","x","y","width","height","MobileMenuIcon","TopnavEasyAccess","color","right","id","to","getColor","localStorage","getItem","themeColorStorageKey","defaultColor","TopnavDarkSwitch","useState","switchChecked","setSwitchChecked","tooltipOpen","setTooltipOpen","useEffect","indexOf","checked","onChange","replace","setItem","setTimeout","window","location","reload","placement","isOpen","target","toggle","Footer","xxs","sm","injectIntl","connect","menu","settings","authUser","containerClassnames","menuClickCount","selectedMenuHasSubItems","receiveAuthUser","locale","loginUser","user","setContainerClassnamesAction","setContainerClassnames","clickOnMobileMenuAction","clickOnMobileMenu","logoutUserAction","logoutUser","changeLocaleAction","changeLocale","intl","history","messages","onClick","e","_clickCount","_conClassnames","preventDefault","event","document","createEvent","initEvent","dispatchEvent","menuButtonClick","_containerClassnames","mobileMenuButtonClick","UncontrolledDropdown","DropdownToggle","caret","size","toUpperCase","DropdownMenu","localeOptions","map","l","DropdownItem","_locale","direction","getDirection","setDirection","key","name","href","isDarkSwitchActive","type","isFS","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","docElm","documentElement","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","first_name","last_name","avatar","alt","src","divider","push","data","icon","label","subs","Sidebar","props","handleWindowResize","isTrusted","nextClasses","getMenuClassesForResize","join","handleDocumentClick","container","getContainer","isMenuClick","classList","contains","parentElement","setState","viewingParentMenu","classes","menuHiddenBreakpoint","subHiddenBreakpoint","split","filter","windowWidth","innerWidth","includes","ReactDOM","findDOMNode","hasSubItems","getIsHasSubItem","changeSelectedMenuHasSubItems","currentClasses","clickIndex","handleProps","addEvents","forEach","addEventListener","removeEvents","removeEventListener","setSelectedLiActive","callback","oldli","querySelector","remove","oldliSub","selectedSublink","add","selectedlink","selectedParentMenu","getAttribute","selectedParentNoSubItem","state","menuItems","setHasSubItemStatus","hasSubmenu","menuItem","find","length","openSubMenu","selectedParent","hasSubMenu","addContainerClassname","toggleMenuCollapse","menuKey","collapsedMenus","prevProps","this","pathname","scrollTo","setProjectMenuItems","userId","_id","role","options","suppressScrollX","wheelPropagation","Nav","vertical","item","NavItem","classnames","active","newWindow","rel","IntlMessages","data-flag","data-parent","sub","index","Collapse","thirdSub","thirdIndex","Badge","pill","style","totalProjectsNumber","latestProjectMenus","project","project_name","Component","withRouter","changeDefaultClassnames","mapActionToProps","receiveAuthUserAction","children","Object","keys","Dashboard","React","lazy","Projects","Settings","Faq","Terms","Privacy","match","fallback","exact","from","url","path","render","Colxx","widths","Separator","withRef"],"mappings":"2NA2BeA,EAzBE,WACf,OACE,oCACE,yBACEC,UAAU,OACVC,MAAM,6BACNC,QAAQ,YAER,0BAAMC,EAAE,OAAOC,EAAE,MAAMC,MAAM,IAAIC,OAAO,MACxC,0BAAMH,EAAE,OAAOC,EAAE,MAAMC,MAAM,IAAIC,OAAO,MACxC,0BAAMH,EAAE,OAAOC,EAAE,OAAOC,MAAM,IAAIC,OAAO,OAE3C,yBACEN,UAAU,MACVC,MAAM,6BACNC,QAAQ,aAER,0BAAMC,EAAE,OAAOC,EAAE,MAAMC,MAAM,KAAKC,OAAO,MACzC,0BAAMH,EAAE,OAAOC,EAAE,MAAMC,MAAM,KAAKC,OAAO,MACzC,0BAAMH,EAAE,OAAOC,EAAE,OAAOC,MAAM,KAAKC,OAAO,SCTnCC,EAVQ,WACrB,OACE,yBAAKN,MAAM,6BAA6BC,QAAQ,aAC9C,0BAAMC,EAAE,MAAMC,EAAE,MAAMC,MAAM,KAAKC,OAAO,MACxC,0BAAMH,EAAE,MAAMC,EAAE,MAAMC,MAAM,KAAKC,OAAO,MACxC,0BAAMH,EAAE,MAAMC,EAAE,OAAOC,MAAM,KAAKC,OAAO,S,iCCP/C,+DAgDeE,IA3CU,WACvB,OACE,yBAAKR,UAAU,8CACb,kBAAC,IAAD,CAAsBA,UAAU,uBAC9B,kBAAC,IAAD,CAAgBA,UAAU,cAAcS,MAAM,SAC5C,uBAAGT,UAAU,sBAEf,kBAAC,IAAD,CACEA,UAAU,yBACVU,OAAK,EACLC,GAAG,oBAEH,kBAAC,IAAD,CAASC,GAAG,iBAAiBZ,UAAU,kBACrC,uBAAGA,UAAU,8BAA+B,IAC5C,kBAAC,IAAD,CAAcW,GAAG,oBAGnB,kBAAC,IAAD,CAASC,GAAG,qBAAqBZ,UAAU,kBACzC,uBAAGA,UAAU,kCAAmC,IAChD,kBAAC,IAAD,CAAcW,GAAG,uBAGnB,kBAAC,IAAD,CAASC,GAAG,aAAaZ,UAAU,kBACjC,uBAAGA,UAAU,+BAAgC,IAC7C,kBAAC,IAAD,CAAcW,GAAG,gBAGnB,kBAAC,IAAD,CAASC,GAAG,eAAeZ,UAAU,kBACnC,uBAAGA,UAAU,iCAAkC,IAC/C,kBAAC,IAAD,CAAcW,GAAG,kBAGnB,kBAAC,IAAD,CAASC,GAAG,gBAAgBZ,UAAU,kBACpC,uBAAGA,UAAU,iCAAkC,IAC/C,kBAAC,IAAD,CAAcW,GAAG,wB,oLC7BvBE,EAAW,WACf,OAAOC,aAAaC,QAAQC,KACxBF,aAAaC,QAAQC,KACrBC,KA8CSC,IA3CU,WAAO,IAAD,EACaC,oBAAS,GADtB,mBACtBC,EADsB,KACPC,EADO,OAESF,oBAAS,GAFlB,mBAEtBG,EAFsB,KAETC,EAFS,KAI7BC,qBAAU,WACR,IAAMf,EAAQI,IACdQ,EAAiBZ,EAAMgB,QAAQ,SAAW,KACzC,IAiBH,OACE,yBAAKzB,UAAU,8CACb,kBAAC,IAAD,CACEW,GAAG,iBACHX,UAAU,0DACV0B,QAASN,EACTO,SArBa,WACjB,IAAIlB,EAAQI,IAERJ,EAAMgB,QAAQ,SAAW,EAC3BhB,EAAQA,EAAMmB,QAAQ,OAAQ,SACrBnB,EAAMgB,QAAQ,UAAY,IACnChB,EAAQA,EAAMmB,QAAQ,QAAS,SAEjCd,aAAae,QAAQb,IAAsBP,GAC3CY,EAAiBZ,EAAMgB,QAAQ,SAAW,GAC1CK,YAAW,WACTC,OAAOC,SAASC,WACf,QAWD,kBAAC,IAAD,CACEC,UAAU,OACVC,OAAQb,EACRc,OAAO,iBACPC,OAAQ,kBAAMd,GAAgBD,KAJhC,gB,iCChDN,6CAwCegB,IAnCA,WACb,OACE,4BAAQtC,UAAU,eAChB,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuC,IAAI,KAAKC,GAAG,KACjB,uBAAGxC,UAAU,mBAAb,+BAEF,kBAAC,IAAD,CAAOA,UAAU,8BACf,wBAAIA,UAAU,oCACZ,wBAAIA,UAAU,wBACZ,kBAAC,IAAD,CAASA,UAAU,WAAWY,GAAI,gBAAlC,mBAIF,wBAAIZ,UAAU,wBACZ,kBAAC,IAAD,CAASA,UAAU,WAAWY,GAAE,cAAhC,uBAIF,wBAAIZ,UAAU,wBACZ,kBAAC,IAAD,CAASA,UAAU,WAAWY,GAAI,IAAlC,oB,mMCsTH6B,cACbC,aAhBsB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACjCC,EAAiEH,EAAjEG,oBAAqBC,EAA4CJ,EAA5CI,eAAgBC,EAA4BL,EAA5BK,wBACrCC,EAAoBJ,EAApBI,gBAGR,MAAO,CACLH,sBACAC,iBACAC,0BACAE,OANiBN,EAAXM,OAOND,kBACAE,UAPgBN,EAASO,QAYF,CACvBC,6BAA8BC,IAC9BC,wBAAyBC,IACzBC,iBAAkBC,IAClBC,mBAAoBC,KAJtBlB,EA5Sa,SAAC,GAYT,IAXLmB,EAWI,EAXJA,KACAC,EAUI,EAVJA,QACAhB,EASI,EATJA,oBACAC,EAQI,EARJA,eACAC,EAOI,EAPJA,wBACAE,EAMI,EANJA,OACAG,EAKI,EALJA,6BACAE,EAII,EAJJA,wBACAE,EAGI,EAHJA,iBACAE,EAEI,EAFJA,mBACAR,EACI,EADJA,UACI,EACsChC,mBAAS,IAD/C,6BAuJiB0C,EAAbE,SACR,OACE,yBAAK/D,UAAU,oBACb,yBAAKA,UAAU,yCACb,kBAAC,IAAD,CACEY,GAAG,IACHoB,SAAU,GACVhC,UAAU,gCACVgE,QAAS,SAACC,GAAD,OA5BO,SAACA,EAAGC,EAAaC,GACvCF,EAAEG,iBAEFtC,YAAW,WACT,IAAMuC,EAAQC,SAASC,YAAY,cACnCF,EAAMG,UAAU,UAAU,GAAO,GACjCzC,OAAO0C,cAAcJ,KACpB,KACHhB,EACEa,EAAc,EACdC,EACAnB,GAkBM0B,CAAgBT,EAAGlB,EAAgBD,KAGrC,kBAAC,IAAD,OAEF,kBAAC,IAAD,CACElC,GAAG,IACHoB,SAAU,GACVhC,UAAU,qDACVgE,QAAS,SAACC,GAAD,OAvBa,SAACA,EAAGU,GAChCV,EAAEG,iBACFb,EAAwBoB,GAqBFC,CAAsBX,EAAGnB,KAEzC,kBAAC,IAAD,OAoBF,yBAAK9C,UAAU,kBACb,kBAAC6E,EAAA,EAAD,CAAsB7E,UAAU,QAC9B,kBAAC8E,EAAA,EAAD,CACEC,OAAK,EACLtE,MAAM,QACNuE,KAAK,KACLhF,UAAU,mBAEV,0BAAMA,UAAU,QAAQkD,EAAO+B,gBAEjC,kBAACC,EAAA,EAAD,CAAclF,UAAU,OAAOU,OAAK,GACjCyE,IAAcC,KAAI,SAACC,GAClB,OACE,kBAACC,EAAA,EAAD,CACEtB,QAAS,kBArMCuB,EAqMwBF,EAAE1E,GArMjB6E,EAqMqBH,EAAEG,UApM1D7B,EAAmB4B,QAGfC,IADqBC,cAAeD,YAEtCE,YAAaF,GACb1D,YAAW,WACTC,OAAOC,SAASC,WACf,OARoB,IAACsD,EAASC,GAsMnBG,IAAKN,EAAE1E,IAEN0E,EAAEO,aAQjB,uBAAG5F,UAAU,cAAc6F,KAAK,KAC9B,0BAAM7F,UAAU,2BAChB,0BAAMA,UAAU,mCAGlB,yBAAKA,UAAU,gBACZ8F,KAAsB,kBAAC,IAAD,MACvB,yBAAK9F,UAAU,4CACb,kBAAC,IAAD,MAEA,4BACEA,UAAU,qDACV+F,KAAK,SACLpF,GAAG,mBACHqD,QAlIe,WACvB,IAAMgC,EA/EH1B,SAAS2B,mBAAoD,OAA/B3B,SAAS2B,mBACvC3B,SAAS4B,yBAC6B,OAArC5B,SAAS4B,yBACV5B,SAAS6B,sBAC0B,OAAlC7B,SAAS6B,sBACV7B,SAAS8B,qBAAwD,OAAjC9B,SAAS8B,oBA4EtCC,EAAS/B,SAASgC,gBACnBN,EAUM1B,SAASiC,eAClBjC,SAASiC,iBACAjC,SAASkC,qBAClBlC,SAASkC,uBACAlC,SAASmC,oBAClBnC,SAASmC,sBACAnC,SAASoC,kBAClBpC,SAASoC,mBAhBLL,EAAOM,kBACTN,EAAOM,oBACEN,EAAOO,qBAChBP,EAAOO,uBACEP,EAAOQ,wBAChBR,EAAOQ,0BACER,EAAOS,qBAChBT,EAAOS,wBAwHH,uBAAG9G,UAAU,+BAGjB,yBAAKA,UAAU,uBACb,kBAAC6E,EAAA,EAAD,CAAsB7E,UAAU,uBAC9B,kBAAC8E,EAAA,EAAD,CAAgB9E,UAAU,MAAMS,MAAM,SACpC,0BAAMT,UAAU,aAAamD,EAAU4D,WAAvC,IAAoD5D,EAAU6D,WAC9D,8BAEwB,MAApB7D,EAAU8D,OACR,yBAAKC,IAAI,SAASC,IAAG,UAAKhE,EAAU8D,QAAU5G,MAAM,OAAOC,OAAO,SAElE,yBAAK4G,IAAI,SAASC,IAAI,6BAK9B,kBAACjC,EAAA,EAAD,CAAclF,UAAU,OAAOU,OAAK,GAClC,kBAAC4E,EAAA,EAAD,kBACA,kBAACA,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,KACE,kBAAC,IAAD,CACE1E,GAAG,iBADL,aAMF,kBAAC0E,EAAA,EAAD,CAAc8B,SAAO,IACrB,kBAAC9B,EAAA,EAAD,CAActB,QAAS,kBAtIjCP,SACAK,EAAQuD,KAAK,iBAqIH,qB,0IC7PCC,EA1DF,CACX,CACE3G,GAAI,YACJ4G,KAAM,mBACNC,MAAO,iBACP5G,GAAI,kBAEN,CACED,GAAI,WACJ4G,KAAM,wBACNC,MAAO,gBACP5G,GAAI,gBACJ6G,KAAM,CACJ,CACEF,KAAM,mBACNC,MAAO,mBACP5G,GAAI,6BAEN,CACED,GAAI,gBACJ4G,KAAM,mBACNC,MAAO,oBACP5G,GAAI,wBAIV,CACED,GAAI,QACJ4G,KAAM,qBACNC,MAAO,aACP5G,GAAI,cAEN,CACED,GAAI,UACJ4G,KAAM,uBACNC,MAAO,eACP5G,GAAI,eACJ6G,KAAM,CACJ,CACEF,KAAM,uBACNC,MAAO,WACP5G,GAAI,oBAEN,CACED,GAAI,gBACJ4G,KAAM,mBACNC,MAAO,kBACP5G,GAAI,0BAIV,CACED,GAAI,WACJ4G,KAAM,uBACNC,MAAO,gBACP5G,GAAI,kBClCF8G,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,mBAAqB,SAACvD,GACpB,IAAIA,GAAUA,EAAMwD,UAApB,CAD8B,IAItB/E,EAAwB,EAAK6E,MAA7B7E,oBACFgF,EAAc,EAAKC,wBAAwBjF,GACjD,EAAK6E,MAAMrE,uBACT,EACAwE,EAAYE,KAAK,KACjB,EAAKL,MAAM3E,2BAlBI,EAsBnBiF,oBAAsB,SAAChE,GACrB,IAAMiE,EAAY,EAAKC,eACnBC,GAAc,GAEhBnE,EAAE7B,QACF6B,EAAE7B,OAAOiG,YACRpE,EAAE7B,OAAOiG,UAAUC,SAAS,gBAC3BrE,EAAE7B,OAAOiG,UAAUC,SAAS,wBAI9BrE,EAAE7B,OAAOmG,eACTtE,EAAE7B,OAAOmG,cAAcF,YACtBpE,EAAE7B,OAAOmG,cAAcF,UAAUC,SAAS,gBACzCrE,EAAE7B,OAAOmG,cAAcF,UAAUC,SAAS,wBAI5CrE,EAAE7B,OAAOmG,eACTtE,EAAE7B,OAAOmG,cAAcA,eACvBtE,EAAE7B,OAAOmG,cAAcA,cAAcF,YACpCpE,EAAE7B,OAAOmG,cAAcA,cAAcF,UAAUC,SAAS,gBACvDrE,EAAE7B,OAAOmG,cAAcA,cAAcF,UAAUC,SAC7C,0BAdJF,GAAc,GAmBZF,EAAUI,SAASrE,EAAE7B,SAAW8F,IAAcjE,EAAE7B,QAAUgG,IAG9D,EAAKI,SAAS,CACZC,kBAAmB,KAErB,EAAKpG,WAxDY,EA2DnB0F,wBAA0B,SAACW,GAAa,IAAD,EACiB,EAAKf,MAAnDgB,EAD6B,EAC7BA,qBAAsBC,EADO,EACPA,oBAC1Bd,EAAcY,EAAQG,MAAM,KAAKC,QAAO,SAAC3I,GAAD,MAAa,KAANA,KAC7C4I,EAAchH,OAAOiH,WAoB3B,OAnBID,EAAcJ,EAChBb,EAAYT,KAAK,eACR0B,EAAcH,GACvBd,EAAcA,EAAYgB,QAAO,SAAC3I,GAAD,MAAa,gBAANA,MAE1B8I,SAAS,kBACpBnB,EAAYmB,SAAS,oBAEtBnB,EAAYT,KAAK,oBAGnBS,EAAcA,EAAYgB,QAAO,SAAC3I,GAAD,MAAa,gBAANA,MAE1B8I,SAAS,iBACrBnB,EAAYmB,SAAS,qBAErBnB,EAAcA,EAAYgB,QAAO,SAAC3I,GAAD,MAAa,oBAANA,MAGrC2H,GAlFU,EAqFnBK,aAAe,WACb,OAAOe,IAASC,YAAT,iBAtFU,EAyFnB9G,OAAS,WACP,IAAM+G,EAAc,EAAKC,kBACzB,EAAK1B,MAAM2B,8BAA8BF,GAF5B,MAGmC,EAAKzB,MAA7C7E,EAHK,EAGLA,oBAAqBC,EAHhB,EAGgBA,eACvBwG,EAAiBzG,EACnBA,EAAoB+F,MAAM,KAAKC,QAAO,SAAC3I,GAAD,MAAa,KAANA,KAC7C,GACAqJ,GAAc,EAEbJ,EAkBHG,EAAeN,SAAS,oBACL,IAAnBlG,EAEAyG,EAAa,GAEbD,EAAeN,SAAS,gBACxBM,EAAeN,SAAS,kBAExBO,EAAa,IAxBXD,EAAeN,SAAS,iBACvBlG,EAAiB,IAAM,GAAKA,EAAiB,IAAM,GAIpDwG,EAAeN,SAAS,oBACJ,IAAnBlG,GAA2C,IAAnBA,GAIzBwG,EAAeN,SAAS,gBACxBM,EAAeN,SAAS,kBAExBO,EAAa,GALbA,EAAa,EALbA,EAAa,EAuBbA,GAAc,GAChB,EAAK7B,MAAMrE,uBACTkG,EACA1G,EACAsG,IAlIa,EAuInBK,YAAc,WACZ,EAAKC,aAxIY,EA2InBA,UAAY,WACV,CAAC,QAAS,aAAc,YAAYC,SAAQ,SAACtF,GAAD,OAC1CC,SAASsF,iBAAiBvF,EAAO,EAAK4D,qBAAqB,OA7I5C,EAiJnB4B,aAAe,WACb,CAAC,QAAS,aAAc,YAAYF,SAAQ,SAACtF,GAAD,OAC1CC,SAASwF,oBAAoBzF,EAAO,EAAK4D,qBAAqB,OAnJ/C,EAuJnB8B,oBAAsB,SAACC,GACrB,IAAMC,EAAQ3F,SAAS4F,cAAc,wBACxB,MAATD,GACFA,EAAM5B,UAAU8B,OAAO,UAGzB,IAAMC,EAAW9F,SAAS4F,cAAc,gCACxB,MAAZE,GACFA,EAAS/B,UAAU8B,OAAO,UAI5B,IAAME,EAAkB/F,SAAS4F,cAC/B,+BAEqB,MAAnBG,GACFA,EAAgB9B,cAAcF,UAAUiC,IAAI,UAG9C,IAAMC,EAAejG,SAAS4F,cAAc,uBAC5C,GAAoB,MAAhBK,EACFA,EAAahC,cAAcF,UAAUiC,IAAI,UACzC,EAAK9B,SACH,CACEgC,mBAAoBD,EAAahC,cAAcA,cAAckC,aAC3D,gBAGJT,OAEG,CACL,IAAMU,EAA0BpG,SAAS4F,cACvC,2BAE6B,MAA3BQ,EACF,EAAKlC,SACH,CACEgC,mBAAoBE,EAAwBD,aAC1C,cAGJT,GAEyC,KAAlC,EAAKW,MAAMH,oBACpB,EAAKhC,SACH,CACEgC,mBAAoBI,EAAU,GAAGjK,IAEnCqJ,KAvMW,EA6MnBa,oBAAsB,WACpB,IAAMC,EAAa,EAAKzB,kBACxB,EAAK1B,MAAM2B,8BAA8BwB,GACzC,EAAKzI,UAhNY,EAmNnBgH,gBAAkB,WAAO,IACfmB,EAAuB,EAAKG,MAA5BH,mBACFO,EAAWH,EAAUI,MAAK,SAAC7K,GAAD,OAAOA,EAAEQ,KAAO6J,KAChD,QAAIO,MACQA,GAAYA,EAAStD,MAAQsD,EAAStD,KAAKwD,OAAS,IAvN/C,EAiPnBC,YAAc,SAACjH,EAAG8G,GAChB,IAAMI,EAAiBJ,EAASpK,GAC1ByK,EAAaL,EAAStD,MAAQsD,EAAStD,KAAKwD,OAAS,EAE3D,GADA,EAAKtD,MAAM2B,8BAA8B8B,GACpCA,EAME,CACLnH,EAAEG,iBADG,MAG2C,EAAKuD,MAA7C7E,EAHH,EAGGA,oBAAqBC,EAHxB,EAGwBA,eACvBwG,EAAiBzG,EACnBA,EAAoB+F,MAAM,KAAKC,QAAO,SAAC3I,GAAD,MAAa,KAANA,KAC7C,GAECoJ,EAAeN,SAAS,eAmB3B,EAAKtB,MAAM0D,sBACT,qBACAvI,IAnBAyG,EAAeN,SAAS,oBACJ,IAAnBlG,GAA2C,IAAnBA,GAIzBwG,EAAeN,SAAS,gBACJ,IAAnBlG,GAA2C,IAAnBA,GAIzBwG,EAAeN,SAAS,iBACvBM,EAAeN,SAAS,oBACL,IAAnBlG,GAA2C,IAAnBA,GAEzB,EAAK4E,MAAMrE,uBAAuB,EAAGR,EAAqBsI,GAN1D,EAAKzD,MAAMrE,uBAAuB,EAAGR,EAAqBsI,GAL1D,EAAKzD,MAAMrE,uBAAuB,EAAGR,EAAqBsI,GAmB9D,EAAK5C,SAAS,CACZC,kBAAmB0C,SAtCrB,EAAK3C,SAAS,CACZC,kBAAmB0C,EACnBX,mBAAoBW,IAEtB,EAAK9I,UA1PU,EAiSnBiJ,mBAAqB,SAACrH,EAAGsH,GACvBtH,EAAEG,iBADiC,IAG3BoH,EAAmB,EAAKb,MAAxBa,eAWR,OAVIA,EAAe/J,QAAQ8J,IAAY,EACrC,EAAK/C,SAAS,CACZgD,eAAgBA,EAAe1C,QAAO,SAAC3I,GAAD,OAAOA,IAAMoL,QAGrDC,EAAenE,KAAKkE,GACpB,EAAK/C,SAAS,CACZgD,qBAGG,GA7SP,EAAKb,MAAQ,CACXH,mBAAoB,GACpB/B,kBAAmB,GACnB+C,eAAgB,IALD,E,+DA2NAC,GACbC,KAAK/D,MAAM3F,SAAS2J,WAAaF,EAAUzJ,SAAS2J,WACtDD,KAAK3B,oBAAoB2B,KAAKb,qBAE9B9I,OAAO6J,SAAS,EAAG,IAErBF,KAAKjC,gB,0CAIL1H,OAAO6H,iBAAiB,SAAU8B,KAAK9D,oBACvC8D,KAAK9D,qBACL8D,KAAKjC,cACLiC,KAAK3B,oBAAoB2B,KAAKb,qBAC9Ba,KAAK/D,MAAMkE,oBAAoB,CAACC,OAAQJ,KAAK/D,MAAMxE,UAAU4I,IAAKC,KAAMN,KAAK/D,MAAMxE,UAAU6I,S,6CAI7FN,KAAK7B,eACL9H,OAAO+H,oBAAoB,SAAU4B,KAAK9D,sB,+BAoElC,IAAD,SAKH8D,KAAKf,MAHPH,EAFK,EAELA,mBACA/B,EAHK,EAGLA,kBACA+C,EAJK,EAILA,eAEF,OACE,yBAAKxL,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,UACb,kBAAC,IAAD,CACEiM,QAAS,CAAEC,iBAAiB,EAAMC,kBAAkB,IAEpD,kBAACC,EAAA,EAAD,CAAKC,UAAQ,EAACrM,UAAU,iBACrB4K,GACCA,EAAUxF,KAAI,SAACkH,GACb,OACE,kBAACC,EAAA,EAAD,CACE5G,IAAK2G,EAAK3L,GACVX,UAAWwM,IAAW,CACpBC,OACGjC,IAAuB8B,EAAK3L,IACL,KAAtB8H,GACFA,IAAsB6D,EAAK3L,MAG9B2L,EAAKI,UACJ,uBACE7G,KAAMyG,EAAK1L,GACX+L,IAAI,sBACJvK,OAAO,UAEP,uBAAGpC,UAAWsM,EAAK/E,OAAS,IAC5B,kBAACqF,EAAA,EAAD,CAAcjM,GAAI2L,EAAK9E,SAGzB,kBAAC,IAAD,CACE5G,GAAI0L,EAAK1L,GACToD,QAAS,SAACC,GAAD,OAAO,EAAKiH,YAAYjH,EAAGqI,IACpCO,YAAWP,EAAK3L,IAEhB,uBAAGX,UAAWsM,EAAK/E,OAAS,IAC5B,kBAACqF,EAAA,EAAD,CAAcjM,GAAI2L,EAAK9E,iBAW3C,yBAAKxH,UAAU,YACb,yBAAKA,UAAU,UACb,kBAAC,IAAD,CACEiM,QAAS,CAAEC,iBAAiB,EAAMC,kBAAkB,IAEnDvB,GACCA,EAAUxF,KAAI,SAACkH,GACb,OACE,kBAACF,EAAA,EAAD,CACEzG,IAAK2G,EAAK3L,GACVX,UAAWwM,IAAW,CACpB,UACG,EAAK7B,MAAMH,qBAAuB8B,EAAK3L,IACL,KAAjC,EAAKgK,MAAMlC,mBACb,EAAKkC,MAAMlC,oBAAsB6D,EAAK3L,KAE1CmM,cAAaR,EAAK3L,IAEjB2L,EAAK7E,MACJ6E,EAAK7E,KAAKrC,KAAI,SAAC2H,EAAKC,GAClB,OACE,kBAACT,EAAA,EAAD,CACE5G,IAAG,UAAK2G,EAAK3L,GAAV,YAAgBqM,GACnBhN,UAAS,UACP+M,EAAItF,MAAQsF,EAAItF,KAAKwD,OAAS,EAC1B,eACA,KAGL8B,EAAIL,UACH,uBACE7G,KAAMkH,EAAInM,GACV+L,IAAI,sBACJvK,OAAO,UAEP,uBAAGpC,UAAW+M,EAAIxF,OAAS,IAC3B,kBAACqF,EAAA,EAAD,CAAcjM,GAAIoM,EAAIvF,SAEtBuF,EAAItF,MAAQsF,EAAItF,KAAKwD,OAAS,EAChC,oCACE,kBAAC,IAAD,CACEjL,UAAS,wCAGA,IAFPwL,EAAe/J,QAAf,UACK6K,EAAK3L,GADV,YACgBqM,IAEZ,GACA,aAENpM,GAAImM,EAAInM,GACRD,GAAE,UAAK2L,EAAK3L,GAAV,YAAgBqM,GAClBhJ,QAAS,SAACC,GAAD,OACP,EAAKqH,mBACHrH,EADF,UAEKqI,EAAK3L,GAFV,YAEgBqM,MAIlB,uBAAGhN,UAAU,2BAA4B,IACzC,kBAAC4M,EAAA,EAAD,CAAcjM,GAAIoM,EAAIvF,SAGxB,kBAACyF,EAAA,EAAD,CACE9K,QAGS,IAFPqJ,EAAe/J,QAAf,UACK6K,EAAK3L,GADV,YACgBqM,KAIlB,kBAACZ,EAAA,EAAD,CAAKpM,UAAU,oBACZ+M,EAAItF,KAAKrC,KAAI,SAAC8H,EAAUC,GACvB,OACE,kBAACZ,EAAA,EAAD,CACE5G,IAAG,UAAK2G,EAAK3L,GAAV,YAAgBqM,EAAhB,YAAyBG,IAE3BD,EAASR,UACR,uBACE7G,KAAMqH,EAAStM,GACf+L,IAAI,sBACJvK,OAAO,UAEP,uBAAGpC,UAAWkN,EAAS3F,OAAS,IAChC,kBAACqF,EAAA,EAAD,CACEjM,GAAIuM,EAAS1F,SAIjB,kBAAC,IAAD,CAAS5G,GAAIsM,EAAStM,IACpB,uBAAGZ,UAAWkN,EAAS3F,OAAS,IAChC,kBAACqF,EAAA,EAAD,CACEjM,GAAIuM,EAAS1F,gBAW/B,kBAAC,IAAD,CAAS5G,GAAImM,EAAInM,IACf,uBAAGZ,UAAW+M,EAAIxF,OAAS,IAC3B,kBAACqF,EAAA,EAAD,CAAcjM,GAAIoM,EAAIvF,QAEX,YAAT8E,EAAK3L,IAA2B,kBAAToM,EAAIpM,IACzB,kBAACyM,EAAA,EAAD,CAAOC,MAAI,EACT5M,MAAM,UACNT,UAAU,oCACVsN,MAAO,CAAC5M,MAAO,SAChB,EAAKiH,MAAM4F,0BAUd,aAAVjB,EAAK3L,IAAmB,EAAKgH,MAAM6F,mBAAmBpI,KAAI,SAACqI,EAAST,GAClE,OACE,kBAACT,EAAA,EAAD,CAAS5G,IAAK8H,EAAQ1B,KACpB,kBAAC,IAAD,CAAS/L,UAAU,iCAAiCY,GAAE,gCAA2B6M,EAAQ1B,MACvF,uBAAG/L,UAAU,oBAAqB,IACjCyN,EAAQC,8B,GAperBC,aA2gBPC,cACblL,aAvBsB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAME,EAAe,EAAfA,SAW/B,MAAO,CACLC,oBAHEH,EAPFG,oBAWA8F,oBAJEjG,EANFiG,oBAWAD,qBALEhG,EALFgG,qBAWA5F,eANEJ,EAJFI,eAWAC,wBAPEL,EAHFK,wBAWAwK,mBARE7K,EAFF6K,mBAWAD,oBATE5K,EADF4K,oBAWApK,UATgBN,EAASO,QAaF,CACvBE,2BACA+H,0BACAwC,4BACAvE,kCACAuC,yBALFnJ,CAMGgF,I,SCngBCoG,EAAmB,CACvBC,sBAAuB9K,KAGV2K,cACblL,aAVsB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAME,EAAe,EAAfA,SAG/B,MAAO,CAAEC,oBAFuBH,EAAxBG,oBAEsBK,UADZN,EAASO,QAQF0K,EAAzBpL,EA7BgB,SAAC,GAAkF,IAAhFI,EAA+E,EAA/EA,oBAAqBkL,EAA0D,EAA1DA,SAAUlK,EAAgD,EAAhDA,QAASiK,EAAuC,EAAvCA,sBAAuB5K,EAAgB,EAAhBA,UAMlF,OAJA3B,qBAAU,WACRuM,EAAsBjK,KACrB,IAEqC,GAAjCmK,OAAOC,KAAK/K,GAAW8H,OAC5B,yBAAKjL,UAAU,YAEf,yBAAKW,GAAG,gBAAgBX,UAAW8C,GACjC,kBAAC,EAAD,CAAQgB,QAASA,IACjB,kBAAC,EAAD,MACA,8BACE,yBAAK9D,UAAU,mBAAmBgO,IAEpC,kBAAC1L,EAAA,EAAD,WCrBA6L,EAAYC,IAAMC,MAAK,kBAC3B,+DAEIC,EAAWF,IAAMC,MAAK,kBAC1B,uEAEIE,EAAWH,IAAMC,MAAK,kBAC1B,+DAEIG,EAAMJ,IAAMC,MAAK,kBACrB,kCAEII,EAAQL,IAAMC,MAAK,kBACvB,kCAEIK,EAAUN,IAAMC,MAAK,kBACzB,kCAkDaT,sBAAWlL,aALF,SAAC,GAEvB,MAAO,CAAEI,oBAF2B,EAAXH,KACjBG,uBAIyC,GAAzBJ,EAhDd,SAAC,GAAe,IAAbiM,EAAY,EAAZA,MACb,OACE,kBAAC,EAAD,KACE,yBAAK3O,UAAU,qBACb,kBAAC,WAAD,CAAU4O,SAAU,yBAAK5O,UAAU,aACjC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE6O,OAAK,EACLC,KAAI,UAAKH,EAAMI,IAAX,KACJnO,GAAE,UAAK+N,EAAMI,IAAX,gBAEJ,kBAAC,IAAD,CACEC,KAAI,UAAKL,EAAMI,IAAX,aACJE,OAAQ,SAACtH,GAAD,OAAW,kBAAC4G,EAAa5G,MAEnC,kBAAC,IAAD,CACEqH,KAAI,UAAKL,EAAMI,IAAX,gBACJE,OAAQ,SAACtH,GAAD,OAAW,kBAAC6G,EAAQ7G,MAE9B,kBAAC,IAAD,CACEqH,KAAI,UAAKL,EAAMI,IAAX,cACJE,OAAQ,SAACtH,GAAD,OAAW,kBAACwG,EAAcxG,MAEpC,kBAAC,IAAD,CACEqH,KAAI,UAAKL,EAAMI,IAAX,aACJE,OAAQ,SAACtH,GAAD,OAAW,kBAAC2G,EAAa3G,MAEnC,kBAAC,IAAD,CACEqH,KAAI,UAAKL,EAAMI,IAAX,UACJE,OAAQ,SAACtH,GAAD,OAAW,kBAAC8G,EAAU9G,MAEhC,kBAAC,IAAD,CACEqH,KAAI,UAAKL,EAAMI,IAAX,YACJE,OAAQ,SAACtH,GAAD,OAAW,kBAAC+G,EAAY/G,MAElC,kBAAC,IAAD,CAAU/G,GAAG,oB,gCC3DzB,iGAGMsO,EAAQ,SAACvH,GAAD,OACZ,kBAAC,IAAD,iBAASA,EAAT,CAAgBwH,OAAQ,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,WAE1DC,EAAY,SAAC,GAAD,IAAGpP,EAAH,EAAGA,UAAH,OAChB,yBAAKA,UAAS,oBAAeA,O,gCCP/B,sCAKeyC,iBAFO,SAACkF,GAAD,OAAW,kBAAC,IAAqBA,KAEd,CACvC0H,SAAS","file":"static/js/views-app.19cea4a7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MenuIcon = () => {\r\n  return (\r\n    <>\r\n      <svg\r\n        className=\"main\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 9 17\"\r\n      >\r\n        <rect x=\"0.48\" y=\"0.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"7.5\" width=\"7\" height=\"1\" />\r\n        <rect x=\"0.48\" y=\"15.5\" width=\"7\" height=\"1\" />\r\n      </svg>\r\n      <svg\r\n        className=\"sub\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 18 17\"\r\n      >\r\n        <rect x=\"1.56\" y=\"0.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"7.5\" width=\"16\" height=\"1\" />\r\n        <rect x=\"1.56\" y=\"15.5\" width=\"16\" height=\"1\" />\r\n      </svg>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuIcon;\r\n","import React from 'react';\r\n\r\nconst MobileMenuIcon = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 26 17\">\r\n      <rect x=\"0.5\" y=\"0.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"7.5\" width=\"25\" height=\"1\" />\r\n      <rect x=\"0.5\" y=\"15.5\" width=\"25\" height=\"1\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default MobileMenuIcon;\r\n","import React from 'react';\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nconst TopnavEasyAccess = () => {\r\n  return (\r\n    <div className=\"position-relative d-none d-sm-inline-block\">\r\n      <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n        <DropdownToggle className=\"header-icon\" color=\"empty\">\r\n          <i className=\"simple-icon-grid\" />\r\n        </DropdownToggle>\r\n        <DropdownMenu\r\n          className=\"position-absolute mt-3\"\r\n          right\r\n          id=\"iconMenuDropdown\"\r\n        >\r\n          <NavLink to=\"/app/dashboard\" className=\"icon-menu-item\">\r\n            <i className=\"iconsminds-shop-4 d-block\" />{' '}\r\n            <IntlMessages id=\"menu.dashboard\" />\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/app/projects/list\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-briefcase d-block\" />{' '}\r\n            <IntlMessages id=\"menu.project-list\" />\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/app/tools\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-wrench d-block\" />{' '}\r\n            <IntlMessages id=\"menu.tools\" />\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/app/support\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-question d-block\" />{' '}\r\n            <IntlMessages id=\"menu.support\" />\r\n          </NavLink>\r\n          \r\n          <NavLink to=\"/app/settings\" className=\"icon-menu-item\">\r\n            <i className=\"simple-icon-settings d-block\" />{' '}\r\n            <IntlMessages id=\"menu.settings\" />\r\n          </NavLink>\r\n\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopnavEasyAccess;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Switch from 'rc-switch';\r\nimport 'rc-switch/assets/index.css';\r\nimport { Tooltip } from 'reactstrap';\r\n\r\nimport {\r\n  defaultColor,\r\n  themeColorStorageKey,\r\n} from '../../constants/defaultValues';\r\n\r\nconst getColor = () => {\r\n  return localStorage.getItem(themeColorStorageKey)\r\n    ? localStorage.getItem(themeColorStorageKey)\r\n    : defaultColor;\r\n};\r\n\r\nconst TopnavDarkSwitch = () => {\r\n  const [switchChecked, setSwitchChecked] = useState(false);\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const color = getColor();\r\n    setSwitchChecked(color.indexOf('dark') > -1);\r\n  }, []);\r\n\r\n  const changeMode = () => {\r\n    let color = getColor();\r\n\r\n    if (color.indexOf('dark') > -1) {\r\n      color = color.replace('dark', 'light');\r\n    } else if (color.indexOf('light') > -1) {\r\n      color = color.replace('light', 'dark');\r\n    }\r\n    localStorage.setItem(themeColorStorageKey, color);\r\n    setSwitchChecked(color.indexOf('dark') > -1);\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-none d-md-inline-block align-middle mr-3\">\r\n      <Switch\r\n        id=\"tooltip_switch\"\r\n        className=\"custom-switch custom-switch-primary custom-switch-small\"\r\n        checked={switchChecked}\r\n        onChange={changeMode}\r\n      />\r\n      <Tooltip\r\n        placement=\"left\"\r\n        isOpen={tooltipOpen}\r\n        target=\"tooltip_switch\"\r\n        toggle={() => setTooltipOpen(!tooltipOpen)}\r\n      >\r\n        Dark Mode\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\nexport default TopnavDarkSwitch;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Row } from 'reactstrap';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"page-footer\">\r\n      <div className=\"footer-content\">\r\n        <div className=\"container-fluid\">\r\n          <Row>\r\n            <Colxx xxs=\"12\" sm=\"6\">\r\n              <p className=\"mb-0 text-muted\">© APIRender.com Pty Ltd</p>\r\n            </Colxx>\r\n            <Colxx className=\"col-sm-6 d-none d-sm-block\">\r\n              <ul className=\"breadcrumb pt-0 pr-0 float-right\">\r\n                <li className=\"breadcrumb-item mb-0\">\r\n                  <NavLink className=\"btn-link\" to={'/app/privacy'}>\r\n                    Privacy Policy\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"breadcrumb-item mb-0\">\r\n                  <NavLink className=\"btn-link\" to={`/app/terms`}>\r\n                    Terms & Conditions\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"breadcrumb-item mb-0\">\r\n                  <NavLink className=\"btn-link\" to={{}}>\r\n                    Support\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </Colxx>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable no-use-before-define */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Input,\r\n} from 'reactstrap';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  setContainerClassnames,\r\n  clickOnMobileMenu,\r\n  logoutUser,\r\n  changeLocale,\r\n} from '../../redux/actions';\r\n\r\nimport {\r\n  menuHiddenBreakpoint,\r\n  searchPath,\r\n  localeOptions,\r\n  isDarkSwitchActive,\r\n} from '../../constants/defaultValues';\r\n\r\nimport { MobileMenuIcon, MenuIcon } from '../../components/svg';\r\nimport TopnavEasyAccess from './Topnav.EasyAccess';\r\nimport TopnavNotifications from './Topnav.Notifications';\r\nimport TopnavDarkSwitch from './Topnav.DarkSwitch';\r\n\r\nimport { getDirection, setDirection } from '../../helpers/Utils';\r\n\r\nconst TopNav = ({\r\n  intl,\r\n  history,\r\n  containerClassnames,\r\n  menuClickCount,\r\n  selectedMenuHasSubItems,\r\n  locale,\r\n  setContainerClassnamesAction,\r\n  clickOnMobileMenuAction,\r\n  logoutUserAction,\r\n  changeLocaleAction,\r\n  loginUser,\r\n}) => {\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n\r\n  const search = () => {\r\n    history.push(`${searchPath}?key=${searchKeyword}`);\r\n    setSearchKeyword('');\r\n  };\r\n\r\n  const handleChangeLocale = (_locale, direction) => {\r\n    changeLocaleAction(_locale);\r\n\r\n    const currentDirection = getDirection().direction;\r\n    if (direction !== currentDirection) {\r\n      setDirection(direction);\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  const isInFullScreenFn = () => {\r\n    return (\r\n      (document.fullscreenElement && document.fullscreenElement !== null) ||\r\n      (document.webkitFullscreenElement &&\r\n        document.webkitFullscreenElement !== null) ||\r\n      (document.mozFullScreenElement &&\r\n        document.mozFullScreenElement !== null) ||\r\n      (document.msFullscreenElement && document.msFullscreenElement !== null)\r\n    );\r\n  };\r\n\r\n  const handleSearchIconClick = (e) => {\r\n    if (window.innerWidth < menuHiddenBreakpoint) {\r\n      let elem = e.target;\r\n      if (!e.target.classList.contains('search')) {\r\n        if (e.target.parentElement.classList.contains('search')) {\r\n          elem = e.target.parentElement;\r\n        } else if (\r\n          e.target.parentElement.parentElement.classList.contains('search')\r\n        ) {\r\n          elem = e.target.parentElement.parentElement;\r\n        }\r\n      }\r\n\r\n      if (elem.classList.contains('mobile-view')) {\r\n        search();\r\n        elem.classList.remove('mobile-view');\r\n        removeEventsSearch();\r\n      } else {\r\n        elem.classList.add('mobile-view');\r\n        addEventsSearch();\r\n      }\r\n    } else {\r\n      search();\r\n    }\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleDocumentClickSearch = (e) => {\r\n    let isSearchClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains('navbar') ||\r\n        e.target.classList.contains('simple-icon-magnifier'))\r\n    ) {\r\n      isSearchClick = true;\r\n      if (e.target.classList.contains('simple-icon-magnifier')) {\r\n        search();\r\n      }\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      e.target.parentElement.classList.contains('search')\r\n    ) {\r\n      isSearchClick = true;\r\n    }\r\n\r\n    if (!isSearchClick) {\r\n      const input = document.querySelector('.mobile-view');\r\n      if (input && input.classList) input.classList.remove('mobile-view');\r\n      removeEventsSearch();\r\n      setSearchKeyword('');\r\n    }\r\n  };\r\n\r\n  const removeEventsSearch = () => {\r\n    document.removeEventListener('click', handleDocumentClickSearch, true);\r\n  };\r\n\r\n  const addEventsSearch = () => {\r\n    document.addEventListener('click', handleDocumentClickSearch, true);\r\n  };\r\n\r\n  const handleSearchInputKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      search();\r\n    }\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    const isFS = isInFullScreenFn();\r\n\r\n    const docElm = document.documentElement;\r\n    if (!isFS) {\r\n      if (docElm.requestFullscreen) {\r\n        docElm.requestFullscreen();\r\n      } else if (docElm.mozRequestFullScreen) {\r\n        docElm.mozRequestFullScreen();\r\n      } else if (docElm.webkitRequestFullScreen) {\r\n        docElm.webkitRequestFullScreen();\r\n      } else if (docElm.msRequestFullscreen) {\r\n        docElm.msRequestFullscreen();\r\n      }\r\n    } else if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    }\r\n    // setIsInFullScreen(!isFS);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logoutUserAction();\r\n    history.push('/user/login');\r\n  };\r\n\r\n  const menuButtonClick = (e, _clickCount, _conClassnames) => {\r\n    e.preventDefault();\r\n\r\n    setTimeout(() => {\r\n      const event = document.createEvent('HTMLEvents');\r\n      event.initEvent('resize', false, false);\r\n      window.dispatchEvent(event);\r\n    }, 350);\r\n    setContainerClassnamesAction(\r\n      _clickCount + 1,\r\n      _conClassnames,\r\n      selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  const mobileMenuButtonClick = (e, _containerClassnames) => {\r\n    e.preventDefault();\r\n    clickOnMobileMenuAction(_containerClassnames);\r\n  };\r\n\r\n  const { messages } = intl;\r\n  return (\r\n    <nav className=\"navbar fixed-top\">\r\n      <div className=\"d-flex align-items-center navbar-left\">\r\n        <NavLink\r\n          to=\"#\"\r\n          location={{}}\r\n          className=\"menu-button d-none d-md-block\"\r\n          onClick={(e) =>\r\n            menuButtonClick(e, menuClickCount, containerClassnames)\r\n          }\r\n        >\r\n          <MenuIcon />\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"#\"\r\n          location={{}}\r\n          className=\"menu-button-mobile d-xs-block d-sm-block d-md-none\"\r\n          onClick={(e) => mobileMenuButtonClick(e, containerClassnames)}\r\n        >\r\n          <MobileMenuIcon />\r\n        </NavLink>\r\n\r\n        {/* <div className=\"search\" data-search-path=\"/app/pages/search\">\r\n          <Input\r\n            name=\"searchKeyword\"\r\n            id=\"searchKeyword\"\r\n            placeholder={messages['menu.search']}\r\n            value={searchKeyword}\r\n            onChange={(e) => setSearchKeyword(e.target.value)}\r\n            onKeyPress={(e) => handleSearchInputKeyPress(e)}\r\n          />\r\n          <span\r\n            className=\"search-icon\"\r\n            onClick={(e) => handleSearchIconClick(e)}\r\n          >\r\n            <i className=\"simple-icon-magnifier\" />\r\n          </span>\r\n        </div> */}\r\n\r\n        <div className=\"d-inline-block\">\r\n          <UncontrolledDropdown className=\"ml-2\">\r\n            <DropdownToggle\r\n              caret\r\n              color=\"light\"\r\n              size=\"sm\"\r\n              className=\"language-button\"\r\n            >\r\n              <span className=\"name\">{locale.toUpperCase()}</span>\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"mt-3\" right>\r\n              {localeOptions.map((l) => {\r\n                return (\r\n                  <DropdownItem\r\n                    onClick={() => handleChangeLocale(l.id, l.direction)}\r\n                    key={l.id}\r\n                  >\r\n                    {l.name}\r\n                  </DropdownItem>\r\n                );\r\n              })}\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      </div>\r\n      <a className=\"navbar-logo\" href=\"/\">\r\n        <span className=\"logo d-none d-xs-block\" />\r\n        <span className=\"logo-mobile d-block d-xs-none\" />\r\n      </a>\r\n\r\n      <div className=\"navbar-right\">\r\n        {isDarkSwitchActive && <TopnavDarkSwitch />}\r\n        <div className=\"header-icons d-inline-block align-middle\">\r\n          <TopnavEasyAccess />\r\n          {/* <TopnavNotifications /> */}\r\n          <button\r\n            className=\"header-icon btn btn-empty d-none d-sm-inline-block\"\r\n            type=\"button\"\r\n            id=\"fullScreenButton\"\r\n            onClick={toggleFullScreen}\r\n          >\r\n            <i className=\"simple-icon-plus d-block\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"user d-inline-block\">\r\n          <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n            <DropdownToggle className=\"p-0\" color=\"empty\">\r\n              <span className=\"name mr-1\">{loginUser.first_name} {loginUser.last_name}</span>\r\n              <span>\r\n                {\r\n                  loginUser.avatar != null ? (\r\n                    <img alt=\"avatar\" src={`${loginUser.avatar}`} width=\"40px\" height=\"40px\" />\r\n                  ): (\r\n                    <img alt=\"avatar\" src='/assets/img/avatar.png' />\r\n                  )\r\n                }\r\n              </span>\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"mt-3\" right>\r\n              <DropdownItem>Dashboard</DropdownItem>\r\n              <DropdownItem>Projects</DropdownItem>\r\n              <DropdownItem>Tools</DropdownItem>\r\n              <DropdownItem>\r\n                <NavLink\r\n                  to=\"/app/settings\"\r\n                >\r\n                  Settings\r\n                </NavLink>\r\n              </DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem onClick={() => handleLogout()}>\r\n                Sign out\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ menu, settings, authUser }) => {\r\n  const { containerClassnames, menuClickCount, selectedMenuHasSubItems } = menu;\r\n  const { receiveAuthUser } = authUser;\r\n  const { locale } = settings;\r\n  const loginUser = authUser.user;\r\n  return {\r\n    containerClassnames,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    locale,\r\n    receiveAuthUser,\r\n    loginUser\r\n  };\r\n};\r\n\r\nexport default injectIntl(\r\n  connect(mapStateToProps, {\r\n    setContainerClassnamesAction: setContainerClassnames,\r\n    clickOnMobileMenuAction: clickOnMobileMenu,\r\n    logoutUserAction: logoutUser,\r\n    changeLocaleAction: changeLocale\r\n  })(TopNav)\r\n);\r\n","const data = [\r\n  {\r\n    id: 'dashboard',\r\n    icon: 'simple-icon-home',\r\n    label: 'menu.dashboard',\r\n    to: '/app/dashboard',\r\n  },\r\n  {\r\n    id: 'projects',\r\n    icon: 'simple-icon-briefcase',\r\n    label: 'menu.projects',\r\n    to: '/app/projects',\r\n    subs: [\r\n      {\r\n        icon: 'simple-icon-plus',\r\n        label: 'menu.new-project',\r\n        to: '/app/projects/new-project',\r\n      },\r\n      {\r\n        id: 'projects-list',\r\n        icon: 'simple-icon-list',\r\n        label: 'menu.project-list',\r\n        to: '/app/projects/list',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'tools',\r\n    icon: 'simple-icon-wrench',\r\n    label: 'menu.tools',\r\n    to: '/app/tools',\r\n  },\r\n  {\r\n    id: 'support',\r\n    icon: 'simple-icon-question',\r\n    label: 'menu.support',\r\n    to: '/app/support',\r\n    subs: [\r\n      {\r\n        icon: 'simple-icon-question',\r\n        label: 'menu.faq',\r\n        to: '/app/support/faq',\r\n      },\r\n      {\r\n        id: 'projects-list',\r\n        icon: 'simple-icon-list',\r\n        label: 'menu.contact-us',\r\n        to: '/app/support/contact',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'settings',\r\n    icon: 'simple-icon-settings',\r\n    label: 'menu.settings',\r\n    to: '/app/settings',\r\n  },\r\n];\r\nexport default data;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport { Nav, NavItem, Collapse, Badge } from 'reactstrap';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nimport {\r\n  setContainerClassnames,\r\n  addContainerClassname,\r\n  changeDefaultClassnames,\r\n  changeSelectedMenuHasSubItems,\r\n  setProjectMenuItems,\r\n} from '../../redux/actions';\r\n\r\nimport menuItems from '../../constants/menu';\r\nimport { getUserId } from '../../helpers/Utils';\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedParentMenu: '',\r\n      viewingParentMenu: '',\r\n      collapsedMenus: [],\r\n    };\r\n  }\r\n\r\n  handleWindowResize = (event) => {\r\n    if (event && !event.isTrusted) {\r\n      return;\r\n    }\r\n    const { containerClassnames } = this.props;\r\n    const nextClasses = this.getMenuClassesForResize(containerClassnames);\r\n    this.props.setContainerClassnames(\r\n      0,\r\n      nextClasses.join(' '),\r\n      this.props.selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  handleDocumentClick = (e) => {\r\n    const container = this.getContainer();\r\n    let isMenuClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains('menu-button') ||\r\n        e.target.classList.contains('menu-button-mobile'))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      (e.target.parentElement.classList.contains('menu-button') ||\r\n        e.target.parentElement.classList.contains('menu-button-mobile'))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.parentElement &&\r\n      e.target.parentElement.parentElement.classList &&\r\n      (e.target.parentElement.parentElement.classList.contains('menu-button') ||\r\n        e.target.parentElement.parentElement.classList.contains(\r\n          'menu-button-mobile'\r\n        ))\r\n    ) {\r\n      isMenuClick = true;\r\n    }\r\n    if (container.contains(e.target) || container === e.target || isMenuClick) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      viewingParentMenu: '',\r\n    });\r\n    this.toggle();\r\n  };\r\n\r\n  getMenuClassesForResize = (classes) => {\r\n    const { menuHiddenBreakpoint, subHiddenBreakpoint } = this.props;\r\n    let nextClasses = classes.split(' ').filter((x) => x !== '');\r\n    const windowWidth = window.innerWidth;\r\n    if (windowWidth < menuHiddenBreakpoint) {\r\n      nextClasses.push('menu-mobile');\r\n    } else if (windowWidth < subHiddenBreakpoint) {\r\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\r\n      if (\r\n        nextClasses.includes('menu-default') &&\r\n        !nextClasses.includes('menu-sub-hidden')\r\n      ) {\r\n        nextClasses.push('menu-sub-hidden');\r\n      }\r\n    } else {\r\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\r\n      if (\r\n        nextClasses.includes('menu-default') &&\r\n        nextClasses.includes('menu-sub-hidden')\r\n      ) {\r\n        nextClasses = nextClasses.filter((x) => x !== 'menu-sub-hidden');\r\n      }\r\n    }\r\n    return nextClasses;\r\n  };\r\n\r\n  getContainer = () => {\r\n    return ReactDOM.findDOMNode(this);\r\n  };\r\n\r\n  toggle = () => {\r\n    const hasSubItems = this.getIsHasSubItem();\r\n    this.props.changeSelectedMenuHasSubItems(hasSubItems);\r\n    const { containerClassnames, menuClickCount } = this.props;\r\n    const currentClasses = containerClassnames\r\n      ? containerClassnames.split(' ').filter((x) => x !== '')\r\n      : '';\r\n    let clickIndex = -1;\r\n\r\n    if (!hasSubItems) {\r\n      if (\r\n        currentClasses.includes('menu-default') &&\r\n        (menuClickCount % 4 === 0 || menuClickCount % 4 === 3)\r\n      ) {\r\n        clickIndex = 1;\r\n      } else if (\r\n        currentClasses.includes('menu-sub-hidden') &&\r\n        (menuClickCount === 2 || menuClickCount === 3)\r\n      ) {\r\n        clickIndex = 0;\r\n      } else if (\r\n        currentClasses.includes('menu-hidden') ||\r\n        currentClasses.includes('menu-mobile')\r\n      ) {\r\n        clickIndex = 0;\r\n      }\r\n    } else if (\r\n      currentClasses.includes('menu-sub-hidden') &&\r\n      menuClickCount === 3\r\n    ) {\r\n      clickIndex = 2;\r\n    } else if (\r\n      currentClasses.includes('menu-hidden') ||\r\n      currentClasses.includes('menu-mobile')\r\n    ) {\r\n      clickIndex = 0;\r\n    }\r\n    if (clickIndex >= 0) {\r\n      this.props.setContainerClassnames(\r\n        clickIndex,\r\n        containerClassnames,\r\n        hasSubItems\r\n      );\r\n    }\r\n  };\r\n\r\n  handleProps = () => {\r\n    this.addEvents();\r\n  };\r\n\r\n  addEvents = () => {\r\n    ['click', 'touchstart', 'touchend'].forEach((event) =>\r\n      document.addEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  removeEvents = () => {\r\n    ['click', 'touchstart', 'touchend'].forEach((event) =>\r\n      document.removeEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  setSelectedLiActive = (callback) => {\r\n    const oldli = document.querySelector('.sub-menu  li.active');\r\n    if (oldli != null) {\r\n      oldli.classList.remove('active');\r\n    }\r\n\r\n    const oldliSub = document.querySelector('.third-level-menu  li.active');\r\n    if (oldliSub != null) {\r\n      oldliSub.classList.remove('active');\r\n    }\r\n\r\n    /* set selected parent menu */\r\n    const selectedSublink = document.querySelector(\r\n      '.third-level-menu  a.active'\r\n    );\r\n    if (selectedSublink != null) {\r\n      selectedSublink.parentElement.classList.add('active');\r\n    }\r\n\r\n    const selectedlink = document.querySelector('.sub-menu  a.active');\r\n    if (selectedlink != null) {\r\n      selectedlink.parentElement.classList.add('active');\r\n      this.setState(\r\n        {\r\n          selectedParentMenu: selectedlink.parentElement.parentElement.getAttribute(\r\n            'data-parent'\r\n          ),\r\n        },\r\n        callback\r\n      );\r\n    } else {\r\n      const selectedParentNoSubItem = document.querySelector(\r\n        '.main-menu  li a.active'\r\n      );\r\n      if (selectedParentNoSubItem != null) {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu: selectedParentNoSubItem.getAttribute(\r\n              'data-flag'\r\n            ),\r\n          },\r\n          callback\r\n        );\r\n      } else if (this.state.selectedParentMenu === '') {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu: menuItems[0].id,\r\n          },\r\n          callback\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  setHasSubItemStatus = () => {\r\n    const hasSubmenu = this.getIsHasSubItem();\r\n    this.props.changeSelectedMenuHasSubItems(hasSubmenu);\r\n    this.toggle();\r\n  };\r\n\r\n  getIsHasSubItem = () => {\r\n    const { selectedParentMenu } = this.state;\r\n    const menuItem = menuItems.find((x) => x.id === selectedParentMenu);\r\n    if (menuItem)\r\n      return !!(menuItem && menuItem.subs && menuItem.subs.length > 0);\r\n    return false;\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      this.setSelectedLiActive(this.setHasSubItemStatus);\r\n\r\n      window.scrollTo(0, 0);\r\n    }\r\n    this.handleProps();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.handleWindowResize);\r\n    this.handleWindowResize();\r\n    this.handleProps();\r\n    this.setSelectedLiActive(this.setHasSubItemStatus);\r\n    this.props.setProjectMenuItems({userId: this.props.loginUser._id, role: this.props.loginUser.role});\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeEvents();\r\n    window.removeEventListener('resize', this.handleWindowResize);\r\n  }\r\n\r\n  openSubMenu = (e, menuItem) => {\r\n    const selectedParent = menuItem.id;\r\n    const hasSubMenu = menuItem.subs && menuItem.subs.length > 0;\r\n    this.props.changeSelectedMenuHasSubItems(hasSubMenu);\r\n    if (!hasSubMenu) {\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n        selectedParentMenu: selectedParent,\r\n      });\r\n      this.toggle();\r\n    } else {\r\n      e.preventDefault();\r\n\r\n      const { containerClassnames, menuClickCount } = this.props;\r\n      const currentClasses = containerClassnames\r\n        ? containerClassnames.split(' ').filter((x) => x !== '')\r\n        : '';\r\n\r\n      if (!currentClasses.includes('menu-mobile')) {\r\n        if (\r\n          currentClasses.includes('menu-sub-hidden') &&\r\n          (menuClickCount === 2 || menuClickCount === 0)\r\n        ) {\r\n          this.props.setContainerClassnames(3, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes('menu-hidden') &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          this.props.setContainerClassnames(2, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes('menu-default') &&\r\n          !currentClasses.includes('menu-sub-hidden') &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          this.props.setContainerClassnames(0, containerClassnames, hasSubMenu);\r\n        }\r\n      } else {\r\n        this.props.addContainerClassname(\r\n          'sub-show-temporary',\r\n          containerClassnames\r\n        );\r\n      }\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleMenuCollapse = (e, menuKey) => {\r\n    e.preventDefault();\r\n\r\n    const { collapsedMenus } = this.state;\r\n    if (collapsedMenus.indexOf(menuKey) > -1) {\r\n      this.setState({\r\n        collapsedMenus: collapsedMenus.filter((x) => x !== menuKey),\r\n      });\r\n    } else {\r\n      collapsedMenus.push(menuKey);\r\n      this.setState({\r\n        collapsedMenus,\r\n      });\r\n    }\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedParentMenu,\r\n      viewingParentMenu,\r\n      collapsedMenus,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"main-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              <Nav vertical className=\"list-unstyled\">\r\n                {menuItems &&\r\n                  menuItems.map((item) => {\r\n                    return (\r\n                      <NavItem\r\n                        key={item.id}\r\n                        className={classnames({\r\n                          active:\r\n                            (selectedParentMenu === item.id &&\r\n                              viewingParentMenu === '') ||\r\n                            viewingParentMenu === item.id,\r\n                        })}\r\n                      >\r\n                        {item.newWindow ? (\r\n                          <a\r\n                            href={item.to}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i className={item.icon} />{' '}\r\n                            <IntlMessages id={item.label} />\r\n                          </a>\r\n                        ) : (\r\n                          <NavLink\r\n                            to={item.to}\r\n                            onClick={(e) => this.openSubMenu(e, item)}\r\n                            data-flag={item.id}\r\n                          >\r\n                            <i className={item.icon} />{' '}\r\n                            <IntlMessages id={item.label} />\r\n                          </NavLink>\r\n                        )}\r\n                      </NavItem>\r\n                    );\r\n                  })}\r\n              </Nav>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sub-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              {menuItems &&\r\n                menuItems.map((item) => {\r\n                  return (\r\n                    <Nav\r\n                      key={item.id}\r\n                      className={classnames({\r\n                        'd-block':\r\n                          (this.state.selectedParentMenu === item.id &&\r\n                            this.state.viewingParentMenu === '') ||\r\n                          this.state.viewingParentMenu === item.id,\r\n                      })}\r\n                      data-parent={item.id}\r\n                    >\r\n                      {item.subs &&\r\n                        item.subs.map((sub, index) => {\r\n                          return (\r\n                            <NavItem\r\n                              key={`${item.id}_${index}`}\r\n                              className={`${\r\n                                sub.subs && sub.subs.length > 0\r\n                                  ? 'has-sub-item'\r\n                                  : ''\r\n                              }`}\r\n                            >\r\n                              {sub.newWindow ? (\r\n                                <a\r\n                                  href={sub.to}\r\n                                  rel=\"noopener noreferrer\"\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  <i className={sub.icon} />{' '}\r\n                                  <IntlMessages id={sub.label} />\r\n                                </a>\r\n                              ) : sub.subs && sub.subs.length > 0 ? (\r\n                                <>\r\n                                  <NavLink\r\n                                    className={`rotate-arrow-icon opacity-50 ${\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                        ? ''\r\n                                        : 'collapsed'\r\n                                    }`}\r\n                                    to={sub.to}\r\n                                    id={`${item.id}_${index}`}\r\n                                    onClick={(e) =>\r\n                                      this.toggleMenuCollapse(\r\n                                        e,\r\n                                        `${item.id}_${index}`\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <i className=\"simple-icon-arrow-down\" />{' '}\r\n                                    <IntlMessages id={sub.label} />\r\n                                  </NavLink>\r\n\r\n                                  <Collapse\r\n                                    isOpen={\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                    }\r\n                                  >\r\n                                    <Nav className=\"third-level-menu\">\r\n                                      {sub.subs.map((thirdSub, thirdIndex) => {\r\n                                        return (\r\n                                          <NavItem\r\n                                            key={`${item.id}_${index}_${thirdIndex}`}\r\n                                          >\r\n                                            {thirdSub.newWindow ? (\r\n                                              <a\r\n                                                href={thirdSub.to}\r\n                                                rel=\"noopener noreferrer\"\r\n                                                target=\"_blank\"\r\n                                              >\r\n                                                <i className={thirdSub.icon} />{' '}\r\n                                                <IntlMessages\r\n                                                  id={thirdSub.label}\r\n                                                />\r\n                                              </a>\r\n                                            ) : (\r\n                                              <NavLink to={thirdSub.to}>\r\n                                                <i className={thirdSub.icon} />{' '}\r\n                                                <IntlMessages\r\n                                                  id={thirdSub.label}\r\n                                                />\r\n                                              </NavLink>\r\n                                            )}\r\n                                          </NavItem>\r\n                                        );\r\n                                      })}\r\n                                    </Nav>\r\n                                  </Collapse>\r\n                                </>\r\n                              ) : (\r\n                                <NavLink to={sub.to}>\r\n                                  <i className={sub.icon} />{' '}\r\n                                  <IntlMessages id={sub.label} />\r\n                                  {\r\n                                    item.id=='projects' && sub.id==='projects-list' && (\r\n                                      <Badge pill\r\n                                        color=\"primary\"\r\n                                        className=\"position-absolute badge-top-right\"\r\n                                        style={{right: \"15px\"}}>\r\n                                      {this.props.totalProjectsNumber}\r\n                                      </Badge>\r\n                                    )\r\n                                  }\r\n                                </NavLink>\r\n                              )}\r\n                            </NavItem>\r\n                          );\r\n                        })}\r\n                        {\r\n                          item.id==='projects' && this.props.latestProjectMenus.map((project, index) => {\r\n                            return (\r\n                              <NavItem key={project._id}>\r\n                                <NavLink className=\"d-flex align-items-center pr-2\" to={`/app/projects/details/${project._id}`}>\r\n                                  <i className=\"simple-icon-doc\" />{' '}\r\n                                  {project.project_name}\r\n                                </NavLink>\r\n                              </NavItem>\r\n                            )\r\n                          })\r\n                        }\r\n                    </Nav>\r\n                  );\r\n                })}\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ menu, authUser }) => {\r\n  const {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    latestProjectMenus,\r\n    totalProjectsNumber,\r\n  } = menu;\r\n  const loginUser = authUser.user;\r\n  return {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    latestProjectMenus,\r\n    totalProjectsNumber,\r\n    loginUser\r\n  };\r\n};\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setContainerClassnames,\r\n    addContainerClassname,\r\n    changeDefaultClassnames,\r\n    changeSelectedMenuHasSubItems,\r\n    setProjectMenuItems,\r\n  })(Sidebar)\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport TopNav from '../containers/navs/Topnav';\r\nimport Sidebar from '../containers/navs/Sidebar';\r\nimport Footer from '../containers/navs/Footer';\r\n\r\nimport {\r\n  receiveAuthUser,\r\n} from '../redux/actions';\r\n\r\nconst AppLayout = ({ containerClassnames, children, history, receiveAuthUserAction, loginUser }) => {\r\n\r\n  useEffect(() => {\r\n    receiveAuthUserAction(history);\r\n  }, []);\r\n\r\n  return Object.keys(loginUser).length == 0 ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <div id=\"app-container\" className={containerClassnames}>\r\n      <TopNav history={history} />\r\n      <Sidebar />\r\n      <main>\r\n        <div className=\"container-fluid\">{children}</div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = ({ menu, authUser }) => {\r\n  const { containerClassnames } = menu;\r\n  const loginUser = authUser.user;\r\n  return { containerClassnames, loginUser};\r\n};\r\nconst mapActionToProps = {\r\n  receiveAuthUserAction: receiveAuthUser\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapActionToProps)(AppLayout)\r\n);\r\n","import React, { Suspense } from 'react';\r\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AppLayout from '../../layout/AppLayout';\r\n\r\nconst Dashboard = React.lazy(() =>\r\n  import(/* webpackChunkName: \"dashboard\" */ './dashboard')\r\n);\r\nconst Projects = React.lazy(() =>\r\n  import(/* webpackChunkName: \"projects\" */ './projects')\r\n);\r\nconst Settings = React.lazy(() =>\r\n  import(/* webpackChunkName: \"settings\" */ './settings')\r\n);\r\nconst Faq = React.lazy(() =>\r\n  import(/* webpackChunkName: \"faq\" */ './faq')\r\n);\r\nconst Terms = React.lazy(() =>\r\n  import(/* webpackChunkName: \"terms and condition\" */ \"./terms\")\r\n);\r\nconst Privacy = React.lazy(() =>\r\n  import(/* webpackChunkName: \"privacy policy\" */ \"./privacy\")\r\n);\r\nconst App = ({ match }) => {\r\n  return (\r\n    <AppLayout>\r\n      <div className=\"dashboard-wrapper\">\r\n        <Suspense fallback={<div className=\"loading\" />}>\r\n          <Switch>\r\n            <Redirect\r\n              exact\r\n              from={`${match.url}/`}\r\n              to={`${match.url}/dashboard`}\r\n            />\r\n            <Route\r\n              path={`${match.url}/settings`}\r\n              render={(props) => <Settings {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/support/faq`}\r\n              render={(props) => <Faq {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/dashboard`}\r\n              render={(props) => <Dashboard {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/projects`}\r\n              render={(props) => <Projects {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/terms`}\r\n              render={(props) => <Terms {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/privacy`}\r\n              render={(props) => <Privacy {...props} />}\r\n            />\r\n            <Redirect to=\"/error\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ menu }) => {\r\n  const { containerClassnames } = menu;\r\n  return { containerClassnames };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(App));\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nconst Colxx = (props) => (\r\n  <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = ({ className }) => (\r\n  <div className={`separator ${className}`} />\r\n);\r\nexport { Colxx, Separator };\r\n","import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n\r\nconst InjectMassage = (props) => <FormattedMessage {...props} />;\r\n\r\nexport default injectIntl(InjectMassage, {\r\n  withRef: false,\r\n});\r\n"],"sourceRoot":""}