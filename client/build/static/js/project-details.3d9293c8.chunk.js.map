{"version":3,"sources":["components/common/ApplicationMenu.js","containers/admin_projects/Pagination.js","containers/admin_projects/ProjectDetailsHeading.js","containers/admin_projects/CustomerDetailSidebar.js","containers/admin_projects/ListServiceListing.js","views/admin/projects/project_details.js"],"names":["ApplicationMenu","children","containerRef","useRef","useState","isOpen","setIsOpen","handleDocumentClick","e","container","current","contains","target","useEffect","forEach","event","document","addEventListener","removeEventListener","ref","className","onClick","Pagination","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","onChangePage","startPoint","endPoint","parseInt","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","xxs","map","key","injectIntl","intl","changeOrderBy","changePageSize","selectedPageSize","totalItemCount","selectedOrderOption","startIndex","match","endIndex","onSearchKey","orderOptions","pageSizes","heading","displayOptionsIsOpen","setDisplayOptionsIsOpen","messages","Row","Button","color","IntlMessages","id","Collapse","UncontrolledDropdown","DropdownToggle","caret","size","label","DropdownMenu","order","index","DropdownItem","column","type","name","placeholder","onKeyPress","right","connect","customer","history","options","suppressScrollX","wheelPropagation","src","avatar","alt","width","height","first_name","last_name","company_name","React","memo","items","displayMode","selectedItems","project","projectID","Table","responsive","product","i_key","obj","services","category","find","o","value","role","desc","img","style","orders","JSON","parse","filter","el","depth","reduce","a","b","getOptionNumbers","quantity","total_price","Badge","statusColor","status","pill","is_paid","exact","to","_id","user_id","ProjectDetails","isLoaded","setIsLoaded","setDisplayMode","setCurrentPage","setSelectedPageSize","setSelectedOrderOption","modalOpen","setModalOpen","setTotalItemCount","setTotalPage","search","setSearch","setSelectedItems","setServices","setProject","axios","get","params","then","res","data","console","log","totalItem","fetchData","project_name","changeDisplayMode","x","selectedItemsLength","length","itemsLength","toLowerCase","toggleModal","totalPrice","cnt"],"mappings":"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","file":"static/js/project-details.3d9293c8.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { NavLink } from 'reactstrap';\r\n\r\nconst ApplicationMenu = ({ children }) => {\r\n  const containerRef = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleDocumentClick = (e) => {\r\n    if (isOpen) {\r\n      const container = containerRef.current;\r\n      if (container.contains(e.target) || container === e.target) {\r\n        return;\r\n      }\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    ['click', 'touchstart'].forEach((event) =>\r\n      document.addEventListener(event, handleDocumentClick, false)\r\n    );\r\n\r\n    return () => {\r\n      ['click', 'touchstart'].forEach((event) =>\r\n        document.removeEventListener(event, handleDocumentClick, false)\r\n      );\r\n    };\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div ref={containerRef} className={`app-menu ${isOpen ? 'shown' : ''}`}>\r\n      {children}\r\n      <NavLink\r\n        className=\"app-menu-button d-inline-block d-xl-none\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <i className=\"simple-icon-options\" />\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApplicationMenu;\r\n","import React from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\n\r\nconst Pagination = ({\r\n  totalPage = 0,\r\n  currentPage = 1,\r\n  numberLimit = 5,\r\n  lastIsActive = true,\r\n  firstIsActive = true,\r\n  onChangePage,\r\n}) => {\r\n  let startPoint = 1;\r\n  let endPoint = numberLimit;\r\n\r\n  if (numberLimit > totalPage) {\r\n    startPoint = 1;\r\n    endPoint = totalPage;\r\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\r\n    startPoint = 1;\r\n    endPoint = numberLimit;\r\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\r\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\r\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\r\n  } else {\r\n    startPoint = totalPage - (numberLimit - 1);\r\n    endPoint = totalPage;\r\n  }\r\n  startPoint = startPoint === 0 ? 1 : startPoint;\r\n  const points = [];\r\n  for (let i = startPoint; i <= endPoint; i += 1) {\r\n    points.push(i);\r\n  }\r\n\r\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\r\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\r\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\r\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\r\n  return totalPage > 1 ? (\r\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\r\n      <Nav className=\"pagination justify-content-center\">\r\n        {firstIsActive && (\r\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link first c-pointer\"\r\n              onClick={() => onChangePage(1)}\r\n            >\r\n              <i className=\"simple-icon-control-start\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n\r\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link prev c-pointer\"\r\n            onClick={() => onChangePage(currentPage - 1)}\r\n          >\r\n            <i className=\"simple-icon-arrow-left\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {points.map((i) => {\r\n          return (\r\n            <NavItem\r\n              key={i}\r\n              className={`page-item ${currentPage === i && 'active'}`}\r\n            >\r\n              <NavLink\r\n                className=\"page-link c-pointer\"\r\n                onClick={() => onChangePage(i)}\r\n              >\r\n                {i}\r\n              </NavLink>\r\n            </NavItem>\r\n          );\r\n        })}\r\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\r\n          <NavLink\r\n            className=\"page-link next c-pointer\"\r\n            onClick={() => onChangePage(currentPage + 1)}\r\n          >\r\n            <i className=\"simple-icon-arrow-right\" />\r\n          </NavLink>\r\n        </NavItem>\r\n        {lastIsActive && (\r\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link last c-pointer\"\r\n              onClick={() => onChangePage(totalPage)}\r\n            >\r\n              <i className=\"simple-icon-control-end\" />\r\n            </NavLink>\r\n          </NavItem>\r\n        )}\r\n      </Nav>\r\n    </Colxx>\r\n  ) : (\r\n    <Colxx xxs=\"12\" className=\"mt-2\" />\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Row,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Collapse,\r\n} from 'reactstrap';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nimport {\r\n  ThumbListIcon,\r\n  ImageListIcon,\r\n} from '../../components/svg';\r\n\r\nconst ProjectDetailsHeading = ({\r\n  intl,\r\n  changeOrderBy,\r\n  changePageSize,\r\n  selectedPageSize,\r\n  totalItemCount,\r\n  selectedOrderOption,\r\n  match,\r\n  startIndex,\r\n  endIndex,\r\n  onSearchKey,\r\n  orderOptions,\r\n  pageSizes,\r\n  heading,\r\n}) => {\r\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\r\n  const { messages } = intl;\r\n  return (\r\n    <Row>\r\n      <Colxx xxs=\"12\">\r\n        <div className=\"mb-2\">\r\n          <h1>\r\n            {heading}\r\n          </h1>\r\n        </div>\r\n\r\n        <div className=\"mb-2\">\r\n          <Button\r\n            color=\"empty\"\r\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\r\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\r\n          >\r\n            <IntlMessages id=\"pages.display-options\" />{' '}\r\n            <i className=\"simple-icon-arrow-down align-middle\" />\r\n          </Button>\r\n          <Collapse\r\n            isOpen={displayOptionsIsOpen}\r\n            className=\"d-md-block\"\r\n            id=\"displayOptions\"\r\n          >\r\n            <div className=\"d-block d-md-inline-block pt-1\">\r\n              <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                  {selectedOrderOption.label}\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  {orderOptions.map((order, index) => {\r\n                    return (\r\n                      <DropdownItem\r\n                        key={index}\r\n                        onClick={() => changeOrderBy(order.column)}\r\n                      >\r\n                        {order.label}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"keyword\"\r\n                  id=\"search\"\r\n                  placeholder={messages['menu.search']}\r\n                  onKeyPress={(e) => onSearchKey(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"float-md-right pt-1\">\r\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\r\n              <UncontrolledDropdown className=\"d-inline-block\">\r\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                  {selectedPageSize}\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  {pageSizes.map((size, index) => {\r\n                    return (\r\n                      <DropdownItem\r\n                        key={index}\r\n                        onClick={() => changePageSize(size)}\r\n                      >\r\n                        {size}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </div>\r\n          </Collapse>\r\n        </div>\r\n        <Separator className=\"mb-5\" />\r\n      </Colxx>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default injectIntl(ProjectDetailsHeading);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\nimport ApplicationMenu from '../../components/common/ApplicationMenu';\r\n\r\nconst CustomerDetailSidebar = ({\r\n  customer,\r\n  match,\r\n  history\r\n}) => {\r\n  return (\r\n    <ApplicationMenu>\r\n      <PerfectScrollbar\r\n        options={{ suppressScrollX: true, wheelPropagation: false }}\r\n      >\r\n        <div className=\"p-4\">\r\n          <p className=\"text-muted text-small\">\r\n            <IntlMessages id=\"pages.customer-detail\" />\r\n          </p>\r\n          <ul className=\"list-unstyled mb-2\">\r\n            <li className=\"nav-item text-center\">\r\n               <img src={`/${customer.avatar}`} alt=\"Avatar\" className=\"rounded-circle\" width=\"100\" height=\"100\"/>\r\n            </li>\r\n            <li className=\"nav-item text-center\">\r\n                <span className=\"text-primary\">{`${customer.first_name} ${customer.last_name}`}</span>\r\n            </li>\r\n            <li className=\"nav-item text-center\">\r\n                Company: <span className=\"text-muted\">{customer.company_name}</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </ApplicationMenu>\r\n  );\r\n};\r\n\r\nexport default connect(null, {\r\n})(CustomerDetailSidebar);\r\n\r\n","import React from 'react';\r\nimport { Row, Badge, Table, CardBody, Card, CardTitle } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Colxx } from '../../components/common/CustomBootstrap';\r\nimport Pagination from './Pagination';\r\nimport IntlMessages from '../../helpers/IntlMessages';\r\n\r\nimport { statusColor } from '../../constants/status';\r\nimport CustomerDetailSidebar from './CustomerDetailSidebar';\r\nimport { services } from \"../../constants/projectValues\";\r\n\r\nfunction collect(props) {\r\n  return { data: props.data };\r\n}\r\n\r\nconst ListServiceListing = ({\r\n  items,\r\n  displayMode,\r\n  selectedItems,\r\n  currentPage,\r\n  totalPage,\r\n  onChangePage,\r\n  projectID,\r\n  project,\r\n}) => {\r\n  const getOptionNumbers = (orders) => {\r\n    let options = JSON.parse(orders);\r\n    options = options.filter(function (el) {\r\n      return el.depth != 1;\r\n    });\r\n    return options.reduce((a, b) => a + (b['quantity'] || 0), 0);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Row className=\"app-row\">\r\n      <Colxx xxs=\"12\" className=\"mb-3\">\r\n        <Table responsive className=\"r-table table table-divided\">\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>Product Type</th>\r\n              <th>Quantity</th>\r\n              <th>Cost</th>\r\n              <th>Status</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              items.map((product, i_key) => {\r\n                const obj = services[project.category].find(o => { return o.value === product.value });\r\n                return (\r\n                  <tr role=\"row\" key={i_key}>\r\n                    <td role=\"cell\" className=\"p-0 list-item-heading w-10\">\r\n                      <div className=\"d-flex align-items-center justify-center\">\r\n                        <img\r\n                          alt={product.desc}\r\n                          src={obj.img}\r\n                          className=\"responsive border-0 card-img-left\"\r\n                          style={{width: '100px', height: '85px'}}\r\n                        />\r\n                      </div>\r\n                    </td>\r\n                    <td role=\"cell\" className=\"truncate align-middle list-item-heading w-40\">\r\n                      {product.name}<span className=\"text-small text-primary\"> ( +{getOptionNumbers(product.orders)} options )</span>\r\n                    </td>\r\n                    <td role=\"cell\" className=\"align-middle list-item-heading w-10 text-muted text-small\">{product.quantity}</td>\r\n                    <td role=\"cell\" className=\"align-middle list-item-heading w-10 text-muted text-small\">${product.total_price}</td>\r\n                    <td role=\"cell\" className=\"align-middle list-item-heading w-20 text-small\">\r\n                      <Badge color={statusColor[product.status]} pill>\r\n                        {product.status}\r\n                      </Badge>\r\n                      \r\n                    </td>\r\n                    <td role=\"cell\" className=\"truncate align-middle list-item-heading w-10\">\r\n                    {\r\n                      product.is_paid && (product.status === \"IN PROGRESS\" || product.status === \"REVIEW\") && (\r\n                        <NavLink\r\n                          exact={true}\r\n                          to={`/admin/projects/briefing/${product._id}`}\r\n                          className=\"top-right-button btn btn-primary btn-sm\"\r\n                        >\r\n                        <IntlMessages id=\"projects.view-briefing\" />\r\n                        </NavLink>\r\n                      )\r\n                    }\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            }\r\n          </tbody>\r\n        </Table>\r\n      </Colxx>\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalPage={totalPage}\r\n        onChangePage={(i) => onChangePage(i)}\r\n      />\r\n    </Row>\r\n    <CustomerDetailSidebar customer={project.user_id} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListServiceListing);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport ProjectDetailsHeading from '../../../containers/admin_projects/ProjectDetailsHeading';\r\nimport ListServiceListing from '../../../containers/admin_projects/ListServiceListing';\r\nimport useMousetrap from '../../../hooks/use-mousetrap';\r\n\r\nconst orderOptions = [\r\n  { column: 'desc', label: 'Service Name' },\r\n  { column: 'price', label: 'Price' },\r\n  { column: 'quantity', label: 'Quantity' },\r\n];\r\nconst pageSizes = [10, 20, 50, 100];\r\n\r\nconst ProjectDetails = ({ match }) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [displayMode, setDisplayMode] = useState('thumblist');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedPageSize, setSelectedPageSize] = useState(10);\r\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\r\n    column: 'desc',\r\n    label: 'Service Name',\r\n  });\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [totalItemCount, setTotalItemCount] = useState(0);\r\n  const [totalPage, setTotalPage] = useState(1);\r\n  const [search, setSearch] = useState('');\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [project, setProject] = useState('');\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedPageSize, selectedOrderOption]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await axios\r\n        .get(\r\n          `/api/projects/detail?_id=${match.params.id}&pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${selectedOrderOption.column}&search=${search}`\r\n        )\r\n        .then((res) => {\r\n          return res.data;\r\n        })\r\n        .then((data) => {\r\n          console.log(data);\r\n          setProject(data.project);\r\n          setTotalPage(data.totalPage);\r\n          setServices(data.services);\r\n          setSelectedItems([]);\r\n          setTotalItemCount(data.totalItem);\r\n          setIsLoaded(true);\r\n        });\r\n    }\r\n    setIsLoaded(false);\r\n    fetchData();\r\n  }, [selectedPageSize, currentPage, selectedOrderOption, search, match.params.id]);\r\n\r\n  const startIndex = (currentPage - 1) * selectedPageSize;\r\n  const endIndex = currentPage * selectedPageSize;\r\n\r\n  return !isLoaded ? (\r\n    <div className=\"loading\" />\r\n  ) : (\r\n    <>\r\n      <div className=\"disable-text-selection\">\r\n        <ProjectDetailsHeading\r\n          heading={project.project_name}\r\n          displayMode={displayMode}\r\n          changeDisplayMode={setDisplayMode}\r\n          changeOrderBy={(column) => {\r\n            setSelectedOrderOption(\r\n              orderOptions.find((x) => x.column === column)\r\n            );\r\n          }}\r\n          changePageSize={setSelectedPageSize}\r\n          selectedPageSize={selectedPageSize}\r\n          totalItemCount={totalItemCount}\r\n          selectedOrderOption={selectedOrderOption}\r\n          match={match}\r\n          startIndex={startIndex}\r\n          endIndex={endIndex}\r\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\r\n          itemsLength={services ? services.length : 0}\r\n          onSearchKey={(e) => {\r\n            if (e.key === 'Enter') {\r\n              setSearch(e.target.value.toLowerCase());\r\n            }\r\n          }}\r\n          orderOptions={orderOptions}\r\n          pageSizes={pageSizes}\r\n          projectID={match.params.id}\r\n          project={project}\r\n          toggleModal={() => setModalOpen(!modalOpen)}\r\n          totalPrice={services.reduce( function(cnt,o){ return cnt + o.total_price; }, 0)}\r\n        />\r\n        <ListServiceListing\r\n          items={services}\r\n          displayMode={displayMode}\r\n          selectedItems={selectedItems}\r\n          currentPage={currentPage}\r\n          totalPage={totalPage}\r\n          onChangePage={setCurrentPage}\r\n          projectID={match.params.id}\r\n          project={project}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectDetails;\r\n"],"sourceRoot":""}